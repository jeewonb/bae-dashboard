{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\src\\\\layouts\\\\Admin.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\"; // import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\"; // import bgImage from \"assets/img/sidebar-5.jpg\";\n\nimport logo from \"assets/img/middlewarelogo-3.png\";\nvar ps;\nvar switchRoutes = React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, routes.map(function (prop, key) {\n  if (prop.layout === \"/admin\") {\n    return React.createElement(Route, {\n      path: prop.layout + prop.path,\n      component: prop.component,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  return null;\n}), React.createElement(Redirect, {\n  from: \"/admin\",\n  to: \"/admin/dashboard\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}));\nvar useStyles = makeStyles(styles);\nexport default function Admin(_ref) {\n  var rest = _extends({}, _ref);\n\n  // styles\n  var classes = useStyles(); // ref to help us initialize PerfectScrollbar on windows devices\n\n  var mainPanel = React.createRef(); // states and functionsd\n  // const [image, setImage] = React.useState(bgImage);\n\n  var _React$useState = React.useState(\"blue\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      color = _React$useState2[0],\n      setColor = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"dropdown show\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fixedClasses = _React$useState4[0],\n      setFixedClasses = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      mobileOpen = _React$useState6[0],\n      setMobileOpen = _React$useState6[1]; // const handleImageClick = image => {\n  //   setImage(image);\n  // };\n\n\n  var handleColorClick = function handleColorClick(color) {\n    setColor(color);\n  };\n\n  var handleFixedClick = function handleFixedClick() {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var getRoute = function getRoute() {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n\n  var resizeFunction = function resizeFunction() {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  }; // initialize and destroy the PerfectScrollbar plugin\n\n\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n\n    window.addEventListener(\"resize\", resizeFunction); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Sidebar, Object.assign({\n    routes: routes,\n    logoText: \"통합 관리 도구\",\n    logo: logo // image={image}\n    ,\n    handleDrawerToggle: handleDrawerToggle,\n    open: mobileOpen,\n    color: color\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.mainPanel,\n    ref: mainPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Navbar, Object.assign({\n    routes: routes,\n    handleDrawerToggle: handleDrawerToggle\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), getRoute() ? React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, switchRoutes)) : React.createElement(\"div\", {\n    className: classes.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, switchRoutes), getRoute() ? React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }) : null));\n}","map":{"version":3,"sources":["C:\\Users\\81484\\Documents\\mom-dashboard\\client\\src\\layouts\\Admin.js"],"names":["React","Switch","Route","Redirect","PerfectScrollbar","makeStyles","Navbar","Footer","Sidebar","routes","styles","logo","ps","switchRoutes","map","prop","key","layout","path","component","useStyles","Admin","rest","classes","mainPanel","createRef","useState","color","setColor","fixedClasses","setFixedClasses","mobileOpen","setMobileOpen","handleColorClick","handleFixedClick","handleDrawerToggle","getRoute","window","location","pathname","resizeFunction","innerWidth","useEffect","navigator","platform","indexOf","current","suppressScrollX","suppressScrollY","document","body","style","overflow","addEventListener","cleanup","destroy","removeEventListener","wrapper","content","container"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\n// import bgImage from \"assets/img/sidebar-5.jpg\";\r\nimport logo from \"assets/img/middlewarelogo-3.png\";\r\n\r\nlet ps;\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\r\n  </Switch>\r\n);\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Admin({ ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  // states and functionsd\r\n  // const [image, setImage] = React.useState(bgImage);\r\n  const [color, setColor] = React.useState(\"blue\");\r\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  // const handleImageClick = image => {\r\n  //   setImage(image);\r\n  // };\r\n  const handleColorClick = color => {\r\n    setColor(color);\r\n  };\r\n  const handleFixedClick = () => {\r\n    if (fixedClasses === \"dropdown\") {\r\n      setFixedClasses(\"dropdown show\");\r\n    } else {\r\n      setFixedClasses(\"dropdown\");\r\n    }\r\n  };\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/maps\";\r\n  };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, [mainPanel]);\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar\r\n        routes={routes}\r\n        logoText={\"통합 관리 도구\"}\r\n        logo={logo}\r\n        // image={image}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color={color}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={routes}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...rest}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n        {getRoute() ? (\r\n          <div className={classes.content}>\r\n            <div className={classes.container}>{switchRoutes}</div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.map}>{switchRoutes}</div>\r\n        )}\r\n        {getRoute() ? <Footer /> : null}\r\n        {/* <FixedPlugin\r\n          handleImageClick={handleImageClick}\r\n          handleColorClick={handleColorClick}\r\n          bgColor={color}\r\n          bgImage={image}\r\n          handleFixedClick={handleFixedClick}\r\n          fixedClasses={fixedClasses}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}