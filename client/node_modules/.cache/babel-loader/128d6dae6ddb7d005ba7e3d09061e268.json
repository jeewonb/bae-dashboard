{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\81484\\\\Documents\\\\mom-dashboard\\\\client\\\\src\\\\views\\\\Icons\\\\Icons.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport Validation from 'react-validation';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport Button from 'react-validation/build/button';\nimport Textarea from 'react-validation/build/textarea';\nimport '../validation.js';\n\nvar Icons =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Icons, _Component);\n\n  function Icons(props) {\n    var _this;\n\n    _classCallCheck(this, Icons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Icons).call(this, props));\n    _this.state = {\n      data: [],\n      modalIsOpen: false,\n      name: '',\n      email: '',\n      msg: '',\n      id: 0\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_this));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_this));\n    _this.logChange = _this.logChange.bind(_assertThisInitialized(_this)); // We capture the value and change state as user changes the value here.\n\n    _this.handleEdit = _this.handleEdit.bind(_assertThisInitialized(_this)); // Function where we submit data\n\n    return _this;\n  }\n\n  _createClass(Icons, [{\n    key: \"openModal\",\n    value: function openModal(member) {\n      this.setState({\n        modalIsOpen: true,\n        name: member.name,\n        email: member.email,\n        id: member.id\n      }, function () {\n        console.log(this.state.value);\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"logChange\",\n    value: function logChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(event) {\n      var _this2 = this;\n\n      //Edit functionality\n      event.preventDefault();\n      var data = {\n        // name: event.target.name.value,\n        // email: event.target.email.value,\n        // id: event.target.id.value\n        name: this.state.name,\n        email: this.state.email,\n        id: this.state.id\n      };\n      console.log(data);\n      fetch(\"http://localhost:9000/users/edit\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          Promise.reject(new Error(\"Bad response from server\"));\n        }\n\n        return response.json();\n      }).then(function (data) {\n        console.log('Update Complete');\n\n        _this2.setState({\n          member: data\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"eventHandler\",\n    value: function eventHandler(event, idx) {\n      var updatedArr = this.state.toggleIdxArray.slice();\n      var checkIdx = updatedArr.indexOf(idx);\n      if (checkIdx === -1) updatedArr.push(idx);else updatedArr.splice(checkIdx, 1);\n      this.setState(function (prevState) {\n        return {\n          toggleIdxArray: updatedArr\n        };\n      });\n    }\n  }, {\n    key: \"deleteMember\",\n    value: function deleteMember(member) {\n      var data = {\n        id: member.id\n      };\n      fetch(\"/users/delete\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        if (data === \"success\") {\n          this.setState({\n            msg: \"User has been deleted.\"\n          });\n        }\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"eventHandler\",\n    value: function eventHandler(event, idx) {\n      var updatedArr = this.state.toggleIdxArray.slice();\n      var checkIdx = updatedArr.indexOf(idx);\n      if (checkIdx === -1) updatedArr.push(idx);else updatedArr.splice(checkIdx, 1);\n      this.setState(function (prevState) {\n        return {\n          toggleIdxArray: updatedArr\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      Modal.setAppElement('body');\n      fetch('http://localhost:9000/users').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this3.setState({\n          data: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel panel-default p50 uth-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Member name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Member email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Blood Group\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Phone number\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Dob\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.data.map(function (member) {\n        return React.createElement(\"tr\", {\n          key: member.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, member.name, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, member.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, member.bloodGroup), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, member.phone_number), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, member.dob), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this4.openModal(member);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Edit\"), \"|\", React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this4.deleteMember(member);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Delete\")));\n      }), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onRequestClose: this.closeModal,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form, {\n        ref: function ref(c) {\n          _this4.form = c;\n        },\n        onSubmit: this.handleEdit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"small-12 columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Leave a comment\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"small-12 medium-4 columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onFocus: this.removeApiError,\n        ref: function ref(c) {\n          _this4.userInput = c;\n        },\n        placeholder: \"username\",\n        type: \"text\",\n        value: \"Username\",\n        name: \"username\",\n        validations: ['required'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"small-12 medium-8 columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Textarea, {\n        placeholder: \"Leave your comment...\",\n        value: \"Comment\",\n        name: \"comment\",\n        validations: ['required'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"small-12 medium-6 columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Submit\")))))))));\n    }\n  }]);\n\n  return Icons;\n}(Component);\n\nexport { Icons as default };","map":{"version":3,"sources":["C:\\Users\\81484\\Documents\\mom-dashboard\\client\\src\\views\\Icons\\Icons.js"],"names":["React","Component","Modal","Validation","Form","Input","Button","Textarea","Icons","props","state","data","modalIsOpen","name","email","msg","id","openModal","bind","closeModal","logChange","handleEdit","member","setState","console","log","value","e","target","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","status","Promise","reject","Error","json","err","idx","updatedArr","toggleIdxArray","slice","checkIdx","indexOf","push","splice","prevState","setAppElement","map","bloodGroup","phone_number","dob","deleteMember","c","form","removeApiError","userInput"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,kBAAP;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAE,KAFJ;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,GAAG,EAAE,EALI;AAMTC,MAAAA,EAAE,EAAE;AANK,KAAb;AASA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,+BAAjB,CAbe,CAa6B;;AAC5C,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBH,IAAhB,+BAAlB,CAde,CAc+B;;AAd/B;AAelB;;;;8BAESI,M,EAAQ;AACd,WAAKC,QAAL,CAAc;AACVX,QAAAA,WAAW,EAAE,IADH;AAEVC,QAAAA,IAAI,EAAES,MAAM,CAACT,IAFH;AAGVC,QAAAA,KAAK,EAAEQ,MAAM,CAACR,KAHJ;AAIVE,QAAAA,EAAE,EAAEM,MAAM,CAACN;AAJD,OAAd,EAKG,YAAY;AACXQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWgB,KAAvB;AACH,OAPD;AAQH;;;iCAEY;AACT,WAAKH,QAAL,CAAc;AACVX,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH;;;8BAESe,C,EAAG;AACT,WAAKJ,QAAL,qBACKI,CAAC,CAACC,MAAF,CAASf,IADd,EACqBc,CAAC,CAACC,MAAF,CAASF,KAD9B;AAGH;;;+BAEUG,K,EAAO;AAAA;;AACd;AACAA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAInB,IAAI,GAAG;AACP;AACA;AACA;AACAE,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAJV;AAKPC,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KALX;AAMPE,QAAAA,EAAE,EAAE,KAAKN,KAAL,CAAWM;AANR,OAAX;AAQAQ,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAoB,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAezB,IAAf;AALgC,OAArC,CAAL,CAMG0B,IANH,CAMQ,UAAUC,QAAV,EAAoB;AACxB,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBC,UAAAA,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,0BAAV,CAAf;AACH;;AACD,eAAOJ,QAAQ,CAACK,IAAT,EAAP;AACH,OAXD,EAWGN,IAXH,CAWQ,UAAC1B,IAAD,EAAU;AACda,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,QAAA,MAAI,CAACF,QAAL,CAAc;AAAED,UAAAA,MAAM,EAAEX;AAAV,SAAd;AACH,OAdD,WAcS,UAAUiC,GAAV,EAAe;AACpBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACH,OAhBD;AAiBH;;;iCAEYf,K,EAAOgB,G,EAAK;AACrB,UAAIC,UAAU,GAAG,KAAKpC,KAAL,CAAWqC,cAAX,CAA0BC,KAA1B,EAAjB;AACA,UAAIC,QAAQ,GAAGH,UAAU,CAACI,OAAX,CAAmBL,GAAnB,CAAf;AACA,UAAII,QAAQ,KAAK,CAAC,CAAlB,EAAqBH,UAAU,CAACK,IAAX,CAAgBN,GAAhB,EAArB,KACKC,UAAU,CAACM,MAAX,CAAkBH,QAAlB,EAA4B,CAA5B;AACL,WAAK1B,QAAL,CAAc,UAAC8B,SAAD;AAAA,eAAgB;AAC1BN,UAAAA,cAAc,EAAED;AADU,SAAhB;AAAA,OAAd;AAIH;;;iCAEYxB,M,EAAQ;AACjB,UAAIX,IAAI,GAAG;AACPK,QAAAA,EAAE,EAAEM,MAAM,CAACN;AADJ,OAAX;AAGAe,MAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAezB,IAAf;AAHa,OAAlB,CAAL,CAIG0B,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxB,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxB,gBAAM,IAAIG,KAAJ,CAAU,0BAAV,CAAN;AACH;;AACD,eAAOJ,QAAQ,CAACK,IAAT,EAAP;AACH,OATD,EASGN,IATH,CASQ,UAAU1B,IAAV,EAAgB;AACpB,YAAIA,IAAI,KAAK,SAAb,EAAwB;AACpB,eAAKY,QAAL,CAAc;AAAER,YAAAA,GAAG,EAAE;AAAP,WAAd;AACH;AACJ,OAbD,WAaS,UAAU6B,GAAV,EAAe;AACpBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACH,OAfD;AAgBH;;;iCAEYf,K,EAAOgB,G,EAAK;AACrB,UAAIC,UAAU,GAAG,KAAKpC,KAAL,CAAWqC,cAAX,CAA0BC,KAA1B,EAAjB;AACA,UAAIC,QAAQ,GAAGH,UAAU,CAACI,OAAX,CAAmBL,GAAnB,CAAf;AACA,UAAII,QAAQ,KAAK,CAAC,CAAlB,EAAqBH,UAAU,CAACK,IAAX,CAAgBN,GAAhB,EAArB,KACKC,UAAU,CAACM,MAAX,CAAkBH,QAAlB,EAA4B,CAA5B;AACL,WAAK1B,QAAL,CAAc,UAAC8B,SAAD;AAAA,eAAgB;AAC1BN,UAAAA,cAAc,EAAED;AADU,SAAhB;AAAA,OAAd;AAIH;;;wCACmB;AAAA;;AAChB5C,MAAAA,KAAK,CAACoD,aAAN,CAAoB,MAApB;AACAvB,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACKM,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,OADlB,EAEKN,IAFL,CAEU,UAAA1B,IAAI;AAAA,eAAI,MAAI,CAACY,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAJA;AAAF,SAAd,CAAJ;AAAA,OAFd;AAGH;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWC,IAAX,CAAgB4C,GAAhB,CAAoB,UAAAjC,MAAM;AAAA,eACvB;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,MAAM,CAACT,IAAZ,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKS,MAAM,CAACR,KAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKQ,MAAM,CAACkC,UAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKlC,MAAM,CAACmC,YAAZ,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKnC,MAAM,CAACoC,GAAZ,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACzC,SAAL,CAAeK,MAAf,CAAN;AAAA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,OACR;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACqC,YAAL,CAAkBrC,MAAlB,CAAN;AAAA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADQ,CANJ,CADuB;AAAA,OAA1B,CADL,EAYI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWE,WADvB;AAEI,QAAA,cAAc,EAAE,KAAKO,UAFzB;AAGI,QAAA,YAAY,EAAC,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,aAAAyC,CAAC,EAAI;AAAE,UAAA,MAAI,CAACC,IAAL,GAAYD,CAAZ;AAAe,SAAjC;AAAmC,QAAA,QAAQ,EAAE,KAAKvC,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAK4C,cADlB;AAEI,QAAA,GAAG,EAAE,aAAAF,CAAC,EAAI;AAAE,UAAA,MAAI,CAACG,SAAL,GAAiBH,CAAjB;AAAoB,SAFpC;AAGI,QAAA,WAAW,EAAC,UAHhB;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAC,UALV;AAMI,QAAA,IAAI,EAAC,UANT;AAOI,QAAA,WAAW,EAAE,CAAC,UAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EAcI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,WAAW,EAAC,uBADhB;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,WAAW,EAAE,CAAC,UAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAdJ,CANJ,EA+BI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CA/BJ,CAbJ,CAZJ,CAXJ,CADJ,CADJ,CADJ;AA2FH;;;;EAtN8B3D,S;;SAAdO,K","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\nimport Validation from 'react-validation';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport Button from 'react-validation/build/button';\r\nimport Textarea from 'react-validation/build/textarea';\r\nimport '../validation.js';\r\n\r\nexport default class Icons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            modalIsOpen: false,\r\n            name: '',\r\n            email: '',\r\n            msg: '',\r\n            id: 0\r\n        }\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.logChange = this.logChange.bind(this); // We capture the value and change state as user changes the value here.\r\n        this.handleEdit = this.handleEdit.bind(this); // Function where we submit data\r\n    }\r\n\r\n    openModal(member) {\r\n        this.setState({\r\n            modalIsOpen: true,\r\n            name: member.name,\r\n            email: member.email,\r\n            id: member.id\r\n        }, function () {\r\n            console.log(this.state.value);\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalIsOpen: false\r\n        });\r\n    }\r\n\r\n    logChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value //setting value edited by the admin in state.\r\n        });\r\n    }\r\n\r\n    handleEdit(event) {\r\n        //Edit functionality\r\n        event.preventDefault()\r\n        var data = {\r\n            // name: event.target.name.value,\r\n            // email: event.target.email.value,\r\n            // id: event.target.id.value\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            id: this.state.id\r\n        }\r\n        console.log(data);\r\n        fetch(\"http://localhost:9000/users/edit\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(function (response) {\r\n            if (response.status >= 400) {\r\n                Promise.reject(new Error(\"Bad response from server\"));\r\n            }\r\n            return response.json();\r\n        }).then((data) => {\r\n            console.log('Update Complete');\r\n            this.setState({ member: data });\r\n        }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    eventHandler(event, idx) {\r\n        let updatedArr = this.state.toggleIdxArray.slice();\r\n        let checkIdx = updatedArr.indexOf(idx);\r\n        if (checkIdx === -1) updatedArr.push(idx);\r\n        else updatedArr.splice(checkIdx, 1);\r\n        this.setState((prevState) => ({\r\n            toggleIdxArray: updatedArr\r\n        })\r\n        );\r\n    }\r\n\r\n    deleteMember(member) {\r\n        var data = {\r\n            id: member.id\r\n        }\r\n        fetch(\"/users/delete\", {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        }).then(function (response) {\r\n            if (response.status >= 400) {\r\n                throw new Error(\"Bad response from server\");\r\n            }\r\n            return response.json();\r\n        }).then(function (data) {\r\n            if (data === \"success\") {\r\n                this.setState({ msg: \"User has been deleted.\" });\r\n            }\r\n        }).catch(function (err) {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    eventHandler(event, idx) {\r\n        let updatedArr = this.state.toggleIdxArray.slice();\r\n        let checkIdx = updatedArr.indexOf(idx);\r\n        if (checkIdx === -1) updatedArr.push(idx);\r\n        else updatedArr.splice(checkIdx, 1);\r\n        this.setState((prevState) => ({\r\n            toggleIdxArray: updatedArr\r\n        })\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        Modal.setAppElement('body');\r\n        fetch('http://localhost:9000/users')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Member name</th>\r\n                                <th>Member email</th>\r\n                                <th>Blood Group</th>\r\n                                <th>Phone number</th>\r\n                                <th>Dob</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.data.map(member =>\r\n                                <tr key={member.id}>\r\n                                    <td>{member.name} </td>\r\n                                    <td>{member.email}</td>\r\n                                    <td>{member.bloodGroup}</td>\r\n                                    <td>{member.phone_number}</td>\r\n                                    <td>{member.dob}</td>\r\n                                    <td><a onClick={() => this.openModal(member)}>Edit</a>|\r\n                            <a onClick={() => this.deleteMember(member)}>Delete</a></td>\r\n                                </tr>\r\n                            )}\r\n                            <Modal\r\n                                isOpen={this.state.modalIsOpen}\r\n                                onRequestClose={this.closeModal}\r\n                                contentLabel=\"Example Modal\" >\r\n                                {/* <Form onSubmit={this.handleEdit} method=\"POST\">\r\n                            <label>Name</label>\r\n                            <Input onChange={this.logChange} className=\"form-control\" value={this.state.name} placeholder='John' name='name' validations={['required']}/>\r\n                            <label>Email</label>\r\n                            <Input onChange={this.logChange} className=\"form-control\" value={this.state.email} placeholder='email@email.com' name='email' validations={['required', 'email']}/>\r\n                            <div className=\"submit-section\">\r\n                            <Button className=\"btn btn-uth-submit\">Submit</Button>\r\n                            </div>\r\n                        </Form> */}\r\n                                <Form ref={c => { this.form = c }} onSubmit={this.handleEdit.bind(this)}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"small-12 columns\">\r\n                                            <h3>Leave a comment</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"small-12 medium-4 columns\">\r\n                                            <label>\r\n                                                <Input\r\n                                                    onFocus={this.removeApiError}\r\n                                                    ref={c => { this.userInput = c }}\r\n                                                    placeholder=\"username\"\r\n                                                    type=\"text\"\r\n                                                    value=\"Username\"\r\n                                                    name=\"username\"\r\n                                                    validations={['required']}\r\n                                                />\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"small-12 medium-8 columns\">\r\n                                            <label>\r\n                                                <Textarea\r\n                                                    placeholder=\"Leave your comment...\"\r\n                                                    value=\"Comment\"\r\n                                                    name=\"comment\"\r\n                                                    validations={['required']}\r\n                                                />\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"small-12 medium-6 columns\">\r\n                                            <Button className=\"button\">Submit</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Form>\r\n                                {/* <form onSubmit={this.handleEdit} method=\"POST\">\r\n                            <label>Name</label>\r\n                            <input onChange={this.logChange} className=\"form-control\" value={this.state.name} placeholder='John' name='name' validations={['required']}/>\r\n                            <label>Email</label>\r\n                            <input onChange={this.logChange} className=\"form-control\" value={this.state.email} placeholder='email@email.com' name='email' validations={['required', 'email']}/>\r\n                            <div className=\"submit-section\">\r\n                            <button className=\"btn btn-uth-submit\">Submit</button>\r\n                            </div>\r\n                        </form> */}\r\n                            </Modal>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}